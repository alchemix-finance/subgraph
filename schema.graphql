###############################################################################
# IMPLEMENTATION
###############################################################################

type Account @entity {
  id: ID!
  alchemistBalances: [AlchemistBalance!]! @derivedFrom(field: "account")
  alchemistActivity: [AlchemistBalanceHistory!]! @derivedFrom(field: "account")
  transmuterBalances: [TransmuterBalance!]! @derivedFrom(field: "account")
  transmuterActivity: [TransmuterBalanceHistory!]! @derivedFrom(field: "account")
}

type AlchemistBalance @entity {
  id: ID!
  account: Account!
  alchemist: Alchemist!
  yieldToken: YieldToken!
  shares: BigInt!
  underlyingValue: BigInt!
  history: [AlchemistBalanceHistory!]! @derivedFrom(field: "balance")
}

type AlchemistBalanceHistory @entity {
  id: ID!
  transaction: Transaction!
  balance: AlchemistBalance!
  account: Account!
  alchemist: Alchemist!
  yieldToken: YieldToken!
  shares: BigInt!
  underlyingValue: BigInt!
  change: BigInt!
  event: Event!
  block: Block!
  timestamp: BigInt!
}

type TransmuterBalance @entity {
  id: ID!
  account: Account!
  transmuter: Transmuter!
  balance: BigInt!
  activity: [TransmuterBalanceHistory!]! @derivedFrom(field: "balance")
}

type TransmuterBalanceHistory @entity {
  id: ID!
  transaction: Transaction!
  account: Account!
  balance: TransmuterBalance!
  value: BigInt!
  change: BigInt!
  event: Event!
  block: Block!
  timestamp: BigInt!
}

"""
An entity representing a yield-bearing asset.
"""
type YieldToken @entity {
  id: ID!
  decimals: BigInt!
  name: String!
  symbol: String!
  underlyingToken: UnderlyingToken!
  activity: [AlchemistBalanceHistory!]! @derivedFrom(field: "yieldToken")
  balances: [AlchemistBalance!]! @derivedFrom(field: "yieldToken")
}

type UnderlyingToken @entity {
  id: ID!
  decimals: BigInt!
  name: String!
  symbol: String!
}

type DebtToken @entity {
  id: ID!
  decimals: BigInt!
  name: String!
  symbol: String!
}

###############################################################################
# GENERIC
###############################################################################

type Block @entity {
  id: ID!
  number: BigInt!
  hash: Bytes!
  timestamp: BigInt!
  events: [Event!]! @derivedFrom(field: "block")
  transactions: [Transaction!]! @derivedFrom(field: "block")
}

type Transaction @entity {
  id: ID!
  hash: Bytes!
  input: Bytes!
  to: Bytes
  block: Block!
  timestamp: BigInt!
  events: [Event!]! @derivedFrom(field: "transaction")
}

interface Event {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
}

interface Contract {
  id: ID!
  events: [Event!]! @derivedFrom(field: "contract")
}

###############################################################################
# ALCHEMIST
###############################################################################

type Alchemist implements Contract @entity {
  id: ID!
  events: [Event!]! @derivedFrom(field: "contract")
  deposits: [AlchemistBalance!]! @derivedFrom(field: "alchemist")
  activity: [AlchemistBalanceHistory!]! @derivedFrom(field: "alchemist")
  tvls: [AlchemistTVL!]! @derivedFrom(field: "alchemist")
}

type AlchemistTVL @entity {
  id: ID!
  alchemist: Alchemist!
  token: YieldToken!
  amount: BigInt!
  underlyingValue: BigInt!
  activity: [AlchemistTVLHistory!]! @derivedFrom(field: "tvl")
}

type AlchemistTVLHistory @entity {
  id: ID!
  tvl: AlchemistTVL!
  alchemist: Alchemist!
  token: YieldToken!
  amount: BigInt!
  underlyingValue: BigInt!
  amountChange: BigInt!
  underlyingValueChange: BigInt!
  transaction: Transaction!
  event: Event!
  block: Block!
  timestamp: BigInt!
}

type AlchemistAddUnderlyingTokenEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  underlyingToken: Bytes!
}

type AlchemistAddYieldTokenEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  yieldToken: Bytes!
}

type AlchemistAdminUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  admin: Bytes!
}

type AlchemistApproveMintEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  owner: Bytes!
  spender: Bytes!
}

type AlchemistApproveWithdrawEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  owner: Bytes!
  spender: Bytes!
  yieldToken: Bytes!
}

type AlchemistBurnEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  recipient: Bytes!
  sender: Bytes!
}

type AlchemistCreditUnlockRateUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  yieldToken: Bytes!
  blocks: BigInt!
}

type AlchemistDepositEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  recipient: Bytes!
  sender: Bytes!
  yieldToken: Bytes!
}

type AlchemistDonateEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  sender: Bytes!
  yieldToken: Bytes!
}

type AlchemistHarvestEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  yieldToken: Bytes!
  minimumAmountOut: BigInt!
  totalHarvested: BigInt!
}

type AlchemistKeeperSetEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  flag: Boolean!
  sentinel: Bytes!
}

type AlchemistLiquidateEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  owner: Bytes!
  shares: BigInt!
  yieldToken: Bytes!
  underlyingToken: Bytes!
}

type AlchemistLiquidationLimitUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  blocks: BigInt!
  maximum: BigInt!
  underlyingToken: Bytes!
}

type AlchemistMaximumExpectedValueUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  maximumExpectedValue: BigInt!
  yieldToken: Bytes!
}

type AlchemistMaximumLossUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  maximumLoss: BigInt!
  yieldToken: Bytes!
}

type AlchemistMinimumCollateralizationUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  minimumCollateralization: BigInt!
}

type AlchemistMintEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  owner: Bytes!
  recipient: Bytes!
}

type AlchemistMintingLimitUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  blocks: BigInt!
  maximum: BigInt!
}

type AlchemistPendingAdminUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  pendingAdmin: Bytes!
}

type AlchemistProtocolFeeReceiverUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  protocolFeeReceiver: Bytes!
}

type AlchemistProtocolFeeUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  protocolFee: BigInt!
}

type AlchemistRepayEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  recipient: Bytes!
  sender: Bytes!
  underlyingToken: Bytes!
}

type AlchemistRepayLimitUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  blocks: BigInt!
  maximum: BigInt!
  underlyingToken: Bytes!
}

type AlchemistSentinelSetEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  flag: Boolean!
  sentinel: Bytes!
}

type AlchemistSnapEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  expectedValue: BigInt!
  yieldToken: Bytes!
}

type AlchemistTokenAdapterUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  tokenAdapter: Bytes!
  yieldToken: Bytes!
}

type AlchemistTransmuterUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  transmuter: Bytes!
}

type AlchemistUnderlyingTokenEnabledEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  enabled: Boolean!
  underlyingToken: Bytes!
}

type AlchemistWithdrawEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  owner: Bytes!
  recipient: Bytes!
  shares: BigInt!
  yieldToken: Bytes!
}

type AlchemistYieldTokenEnabledEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  enabled: Boolean!
  yieldToken: Bytes!
}

###############################################################################
# TRANSMUTER
###############################################################################

type Transmuter implements Contract @entity {
  id: ID!
  debtToken: DebtToken!
  underlyingToken: UnderlyingToken!
  events: [Event!]! @derivedFrom(field: "contract")
}

type TransmuterBalanceAddedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
}

type TransmuterBalanceRemovedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
}

type TransmuterAdminUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  admin: Bytes!
}

type TransmuterClaimEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  recipient: Bytes!
  sender: Bytes!
}

type TransmuterDepositEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  owner: Bytes!
  sender: Bytes!
}

type TransmuterExchangeEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  sender: Bytes!
}

type TransmuterPausedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  flag: Boolean!
}

type TransmuterPendingAdminUpdatedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  pendingAdmin: Bytes!
}

type TransmuterRoleAdminChangedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  newAdminRole: Bytes!
  previousAdminRole: Bytes!
  role: Bytes!
}

type TransmuterRoleGrantedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
  role: Bytes!
  sender: Bytes!
}

type TransmuterRoleRevokedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
  role: Bytes!
  sender: Bytes!
}

type TransmuterWhitelistDisabledEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
}

type TransmuterWhitelistEnabledEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
}

type TransmuterWithdrawEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  amount: BigInt!
  recipient: Bytes!
  sender: Bytes!
}

###############################################################################
# TRANSMUTER BUFFER
###############################################################################

type TransmuterBuffer implements Contract @entity {
  id: ID!
  events: [Event!]! @derivedFrom(field: "contract")
}

type TransmuterBufferRefreshStrategiesEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
}

type TransmuterBufferRegisterAssetEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  transmuter: Bytes!
  underlyingToken: Bytes!
}

type TransmuterBufferRoleAdminChangedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  newAdminRole: Bytes!
  previousAdminRole: Bytes!
  role: Bytes!
}

type TransmuterBufferRoleGrantedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
  role: Bytes!
  sender: Bytes!
}

type TransmuterBufferRoleRevokedEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  account: Bytes!
  role: Bytes!
  sender: Bytes!
}

type TransmuterBufferSetAlchemistEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  alchemist: Bytes!
}

type TransmuterBufferSetFlowRateEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  flowRate: BigInt!
  underlyingToken: Bytes!
}

type TransmuterBufferSetSourceEvent implements Event @entity {
  id: ID!
  cursor: BigInt!
  index: BigInt!
  block: Block!
  timestamp: BigInt!
  contract: Contract!
  transaction: Transaction!
  flag: Boolean!
  source: Bytes!
}
